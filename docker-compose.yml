services:

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eucomida
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - eucomida-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/eucomida?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - eucomida-net
    depends_on:
      - db

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KC_HOSTNAME_URL: http://keycloak:8080
      KC_HOSTNAME_ADMIN_URL: http://keycloak:8080
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/eucomida
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    volumes:
      - ./auth/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8080:8080"
    networks:
      - eucomida-net
    depends_on:
      - db

  kong:
    image: kong/kong-gateway:3.9
    container_name: kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_LOG_LEVEL: debug
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - eucomida-net
    volumes:
      - ./gateway/kong.yml:/usr/local/kong/declarative/kong.yml

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - eucomida-net
    depends_on:
      - pedido-service
      - postgres-exporter

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.99.0
    container_name: otel-collector
    user: "0"
    command: [ "--config=/etc/otel/config.yaml" ]
    volumes:
      - ./monitoring/otel-config.yaml:/etc/otel/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "4317:4317"
      - "4318:4318"
    networks:
      - eucomida-net
    depends_on:
      - loki

  loki:
    image: grafana/loki:3.1.0
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - eucomida-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana;
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - eucomida-net
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki

  pedido-service:
    build: ./pedido-service
    container_name: pedido-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KEYCLOAK_AUTH_URL=http://localhost:8080
      - KEYCLOAK_REALM=eucomida
      - OTEL_SERVICE_NAME=pedido-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    ports:
      - "8081:8081"
    networks:
      - eucomida-net

volumes:
  grafana-data:
  pgdata:
  opensearch-data:

networks:
  eucomida-net:
    driver: bridge
